import { Markup, Stage } from 'telegraf';
import AdminMessage from '../controllers/admin';
import StartMessage from '../controllers/start';
import StatsMessage from '../controllers/stats';
import { getAdmins, isAdmin, dismissAdmin } from '../helpers/functions';

const AdminHandlers = {
	init: (bot) => {
		bot.command('admin', async (ctx) => {
			if (await isAdmin(ctx.from.id)) {
				await AdminMessage.send(ctx);
			}
		});

		bot.hears('–†–∞—Å—Å—ã–ª–∫–∞ üì°', async (ctx: any) => {
			if (await isAdmin(ctx.from.id)) {
				await ctx.scene.enter('gsend');
			}
		});

		bot.hears('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üìä', async (ctx) => {
			if (await isAdmin(ctx.from.id)) {
				await StatsMessage.send(ctx);
			}
		});

		bot.hears('–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞ üëî', async (ctx) => {
			if (await isAdmin(ctx.from.id)) {
				await ctx.scene.enter('addAdmins');
			}
		});

		bot.hears('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ üö™', async (ctx) => {
			if (await isAdmin(ctx.from.id)) {
				await StartMessage.send(ctx);
			}
		});

		bot.hears('–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ üìÉ', async (ctx) => {
			if (await isAdmin(ctx.from.id)) {
				const admins = await getAdmins();

				for (const admin of admins) {
					const name = admin.name;
					const chatId = admin.chatId;
					const username = admin.username !== undefined ? admin.username : '–Ω–µ —É–∫–∞–∑–∞–Ω–æ';

					let keyboard = Markup.inlineKeyboard([
						Markup.callbackButton('–û—Ç—Å—Ç—Ä–∞–Ω–∏—Ç—å ‚ùå ', `dismiss>${chatId}`)
					]).extra();

					await ctx.replyWithHTML(
						`<b>–ò–º—è</b>: ${name}\n<b>–Æ–∑–µ—Ä–Ω–µ–π–º</b>: @${username}\n<b>ChatId</b>: ${chatId}`,
						keyboard
					);
				}
				await AdminMessage.send(ctx);
			}
		});

		bot.action(/^dismiss>[0-9]+$/, async (ctx) => {
			if (await isAdmin(ctx.from.id)) {
				try {
					await dismissAdmin(+ctx.callbackQuery.data.split('>')[1]);
					await ctx.answerCbQuery();
					await ctx.reply('–ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å—Ç—Ä–∞–Ω—ë–Ω ‚úîÔ∏è', AdminMessage.keyboard);
				} catch (err) {
					console.error(err);
					await ctx.answerCbQuery();
					await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Å—Ç—Ä–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∞, –ø—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è', AdminMessage.keyboard);
				}
			}
		});
	}
};

export default AdminHandlers;
