import { Markup } from 'telegraf';
import AdminMessage from '../../controllers/admin';
import { addAdmin } from '../../helpers/functions';
import IScene from '../../typings/scene';

const Scene = require('telegraf/scenes/base');

const scene: IScene = new Scene('addAdmins');

scene.backScene = AdminMessage;
// scene.nextScene = AdminMessage;

// –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å—Ü–µ–Ω—É
scene.enter(async (ctx: any) => {
    const keyboard = scene.backInlineKeyboard;
    await ctx.replyWithHTML('–ü–µ—Ä–µ—à–ª–∏—Ç–µ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±—É–¥—É—â–µ–≥–æ –∞–¥–º–∏–Ω–∞ ‚è©\n–û–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å <b>–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –±–æ—Ç–∞</b>!', keyboard.extra());
});

scene.on('message', async (ctx: any) => {
    await scene.leave(ctx);
    
    try {
        const adminId = ctx.message.forward_from.id;
        await addAdmin(adminId); // –¥–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤
        
        await ctx.reply('–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! üéâ', AdminMessage.keyboard);
        console.log(`–ù–æ–≤—ã–π –∞–¥–º–∏–Ω(${adminId}) –¥–æ–±–∞–≤–ª–µ–Ω! üéâ –ê–¥–º–∏–Ω: @${ctx.from.username}`);
    }
    catch (err) {
        await ctx.reply(
            '–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã—Ö –∞–¥–º–∏–Ω–æ–≤, –ø—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è.\n–í–æ–∑–º–æ–∂–Ω–æ, –í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ',
            AdminMessage.keyboard
        );
        console.error(err.message);
    }
    
    await scene.next(ctx);
});

export default scene;
